#include <iostream>

class IntList
{
private:
	int m_List[10] = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 };

public:
	int& operator[] (const int index);
	const int& operator[] (const int index) const;
};

int& IntList::operator[] (const int index)
{
	return m_List[index];
}

const int& IntList::operator[] (const int index) const
{
	return m_List[index];
}

int main()
{
	IntList list;
	list[2] = 3; // okay: calls non-const version of operator[]
	std::cout << list[2];

	const IntList clist;
	//clist[2] = 3; // compile error: calls const version of operator[], which returns a const reference.  Cannot assign to this.
	std::cout << clist[2];

	return 0;
}
